#!/usr/bin/python
 
import sys
import subprocess
import apt_pkg
 
DISTRO = subprocess.Popen(["lsb_release", "-c", "-s"],
                          stdout=subprocess.PIPE).communicate()[0].strip()
 
class OpNullProgress(object):
    '''apt progress handler which supresses any output.'''
    def update(self):
        pass
    def done(self):
        pass
 
def is_security_upgrade(pkg):
    '''
    Checks to see if a package comes from a DISTRO-security source.
    '''
    security_package_sources = [("Ubuntu", "%s-security" % DISTRO),
                               ("Debian", "%s-security" % DISTRO)]
 
    for (file, index) in pkg.file_list:
        for origin, archive in security_package_sources:
            if (file.archive == archive and file.origin == origin):
                return True
    return False
 
apt_pkg.init()
 
try:
    cache = apt_pkg.Cache(OpNullProgress())
except SystemError, e:
    sys.stderr.write("Error: Opening the cache (%s)" % e)
    sys.exit(-1)
 
depcache = apt_pkg.DepCache(cache)
depcache.read_pinfile()
depcache.init()
 
if depcache.broken_count > 0:
    sys.stderr.write("Error: Broken packages exist.")
    sys.exit(-1)
 
try:
    depcache.upgrade(True)
    if depcache.del_count > 0:
        depcache.init()
    depcache.upgrade()
except SystemError, e:
    sys.stderr.write("Error: Couldn't mark the upgrade (%s)" % e)
    sys.exit(-1)
 
upgrades = 0
security_upgrades = 0
for pkg in cache.packages:
    candidate = depcache.get_candidate_ver(pkg)
    current = pkg.current_ver
 
    if not (depcache.marked_install(pkg) or depcache.marked_upgrade(pkg)):
        continue
 
    upgrades += 1
 
    if is_security_upgrade(candidate):
        security_upgrades += 1
 
    for version in pkg.version_list:
        if (current and apt_pkg.version_compare(version.ver_str, current.ver_str) <= 0):
            continue
        if is_security_upgrade(version):
            security_upgrades += 1
            break
 
print "%d updates to install." % upgrades
print "%d are security updates." % security_upgrades
print ""
